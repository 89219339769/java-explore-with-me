{
	"info": {
		"_postman_id": "f376ef31-4534-4367-9977-af72962b1c71",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23414239"
	},
	"item": [
		{
			"name": "add comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\tlet serverResponse = pm.response;\r",
							"\tpm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\",function() { pm.response.to.be.ok; \r",
							"                     pm.response.to.be.withBody; // ответ должен содержать тело\",\r",
							"                     pm.response.to.be.json; // и тело ответа должно быть в формате JSON\",\r",
							"\t\t\t\t\t\t\t}); \r",
							"\tconst source = JSON.parse(pm.request.body.raw)\r",
							"\tconst target = pm.response.json()\r",
							"\tpm.test(\"Событие должно содержать поля: description, userId, eventId \", function () {\r",
							"\tpm.expect(target).to.have.property('id');\r",
							"    pm.expect(target).to.have.property('description');\r",
							"\tpm.expect(target).to.have.property('userId');\r",
							"\tpm.expect(target).to.have.property('eventId');\r",
							"\tpm.expect(target).to.have.property('createdOn');\r",
							"\t})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"нормальное событие\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/3/comments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"3",
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "add wrong comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"ужасное событие\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/888/comments/1111",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"888",
						"comments",
						"1111"
					]
				}
			},
			"response": []
		},
		{
			"name": "Approve comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let serverResponse = pm.response;\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.be.ok; // код ответа должен быть равен 200 OK\r",
							"    pm.response.to.be.withBody; // ответ должен содержать тело\r",
							"    pm.response.to.be.json; // и тело ответа должно быть в формате JSON\r",
							"}); \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/2/comments/1/approve",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"2",
						"comments",
						"1",
						"approve"
					]
				}
			},
			"response": []
		},
		{
			"name": "get comments by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(target.description).to.not.be.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/event/1/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event",
						"1",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get comments witn wrong id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/event/99/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event",
						"99",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "wrong patch comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"не yt очень нормальное событие\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/3333/comments/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"3333",
						"comments",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "get comments by eventId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/event/1/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event",
						"1",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get comments by wrongId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/event/111/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"event",
						"111",
						"comments"
					]
				}
			},
			"response": []
		}
	]
}